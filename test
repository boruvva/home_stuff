import org.junit.jupiter.api.*;

import static org.junit.jupiter.api.Assertions.*;

class MainTest {
    @Test
    void testUpdateDates() {
        String jsonString = "{...}";  // Your test JSON string here
        JSONObject jsonObject = new JSONObject(jsonString);

        String referenceDateStr = jsonObject.getJSONObject("expiryPayment").getString("barrierStartDate");
        LocalDate referenceDate = LocalDate.parse(referenceDateStr);

        Main.updateDates(jsonObject, referenceDate);

        // Add your assertions here based on your test JSON data
    }
}

import org.json.*;
import org.junit.*;
import org.mockito.*;
import java.time.*;
import java.time.format.*;
import java.io.*;

public class DateFinderTest {
    private static DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

    @Test
    public void testFindDates() {
        // Prepare test data
        JSONObject inputJson = new JSONObject("{\"expiryPayment\": {\"barrierStartDate\": \"2024-01-28\"}, \"date2\": \"2024-01-30\"}");
        JSONObject expectedOutputJson = new JSONObject("{\"expiryPayment\": {\"barrierStartDate\": 1}, \"date2\": -1}");

        // Call the method to test
        JSONObject actualOutputJson = new JSONObject();
        LocalDate referenceDate = LocalDate.parse(inputJson.getJSONObject("expiryPayment").getString("barrierStartDate"), formatter);
        DateFinder.findDates(inputJson, actualOutputJson, referenceDate);

        // Check the result
        Assert.assertEquals(expectedOutputJson.toString(), actualOutputJson.toString());
    }
}
